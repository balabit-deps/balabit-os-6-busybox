Backport of:

From bc9bbeb2b81001e8731cd2ae501c8fccc8d87cc7 Mon Sep 17 00:00:00 2001
From: Denys Vlasenko <vda.linux@googlemail.com>
Date: Thu, 10 Aug 2017 11:52:42 +0200
Subject: libarchive: do not extract unsafe symlinks unless
 $EXTRACT_UNSAFE_SYMLINKS=1

function                                             old     new   delta
unsafe_symlink_target                                  -     147    +147
unzip_main                                          2711    2732     +21
copy_file                                           1657    1678     +21
tar_main                                             999     971     -28
data_extract_all                                    1038     984     -54
------------------------------------------------------------------------------
(add/remove: 2/0 grow/shrink: 2/2 up/down: 189/-82)           Total: 107 bytes

Signed-off-by: Denys Vlasenko <vda.linux@googlemail.com>
---
 archival/libarchive/Kbuild.src              |  2 ++
 archival/libarchive/data_extract_all.c      | 37 +++++++++-------------
 archival/libarchive/unsafe_symlink_target.c | 48 +++++++++++++++++++++++++++++
 archival/tar.c                              | 19 ------------
 archival/unzip.c                            | 10 ++++--
 coreutils/link.c                            |  5 ++-
 include/bb_archive.h                        |  4 +--
 libbb/copy_file.c                           |  5 ++-
 testsuite/tar.tests                         | 10 +++---
 9 files changed, 85 insertions(+), 55 deletions(-)
 create mode 100644 archival/libarchive/unsafe_symlink_target.c

Index: busybox-1.22.0/archival/libarchive/Kbuild.src
===================================================================
--- busybox-1.22.0.orig/archival/libarchive/Kbuild.src	2017-11-30 08:53:02.744694558 -0500
+++ busybox-1.22.0/archival/libarchive/Kbuild.src	2017-11-30 08:53:02.736694461 -0500
@@ -12,6 +12,8 @@ COMMON_FILES:= \
 	data_extract_all.o \
 	data_extract_to_stdout.o \
 \
+	unsafe_symlink_target.o \
+\
 	filter_accept_all.o \
 	filter_accept_list.o \
 	filter_accept_reject_list.o \
Index: busybox-1.22.0/archival/libarchive/data_extract_all.c
===================================================================
--- busybox-1.22.0.orig/archival/libarchive/data_extract_all.c	2017-11-30 08:53:02.744694558 -0500
+++ busybox-1.22.0/archival/libarchive/data_extract_all.c	2017-11-30 09:05:50.877946376 -0500
@@ -145,7 +145,9 @@ void FAST_FUNC data_extract_all(archive_
 //TODO: what if file_header->link_target == NULL (say, corrupted tarball?)
 
 		/* To avoid a directory traversal attack via symlinks,
-		 * for certain link targets postpone creation of symlinks.
+		 * do not restore symlinks with ".." components
+		 * or symlinks starting with "/", unless a magic
+		 * envvar is set.
 		 *
 		 * For example, consider a .tar created via:
 		 *  $ tar cvf bug.tar anything.txt
@@ -163,22 +165,16 @@ void FAST_FUNC data_extract_all(archive_
 		 *
 		 * Untarring bug.tar would otherwise place evil.py in '/tmp'.
 		 */
-		if (file_header->link_target[0] == '/'
-		 || strstr(file_header->link_target, "..")
-		) {
-			llist_add_to(&archive_handle->symlink_placeholders,
-				xasprintf("%s%c%s", file_header->name, '\0', file_header->link_target)
-			);
-			break;
-		}
-		res = symlink(file_header->link_target, file_header->name);
-		if ((res == -1)
-		 && !(archive_handle->ah_flags & ARCHIVE_EXTRACT_QUIET)
-		) {
-			bb_perror_msg("can't create %slink "
-				"from %s to %s", "sym",
-				file_header->name,
-				file_header->link_target);
+		if (!unsafe_symlink_target(file_header->link_target)) {
+			res = symlink(file_header->link_target, file_header->name);
+			if (res != 0
+			 && !(archive_handle->ah_flags & ARCHIVE_EXTRACT_QUIET)
+			) {
+				bb_perror_msg("can't create %slink "
+					"from %s to %s", "sym",
+					file_header->name, file_header->link_target
+				);
+			}
 		}
 		break;
 	case S_IFSOCK:
Index: busybox-1.22.0/archival/libarchive/unsafe_symlink_target.c
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ busybox-1.22.0/archival/libarchive/unsafe_symlink_target.c	2017-11-30 08:53:02.736694461 -0500
@@ -0,0 +1,48 @@
+/* vi: set sw=4 ts=4: */
+/*
+ * Licensed under GPLv2 or later, see file LICENSE in this source tree.
+ */
+#include "libbb.h"
+#include "bb_archive.h"
+
+int FAST_FUNC unsafe_symlink_target(const char *target)
+{
+	const char *dot;
+
+	if (target[0] == '/') {
+		const char *var;
+ unsafe:
+		var = getenv("EXTRACT_UNSAFE_SYMLINKS");
+		if (var) {
+			if (LONE_CHAR(var, '1'))
+				return 0; /* pretend it's safe */
+			return 1; /* "UNSAFE!" */
+		}
+		bb_error_msg("skipping unsafe symlink to '%s' in archive,"
+			" set %s=1 to extract",
+			target,
+			"EXTRACT_UNSAFE_SYMLINKS"
+		);
+		/* Prevent further messages */
+		setenv("EXTRACT_UNSAFE_SYMLINKS", "0", 0);
+		return 1; /* "UNSAFE!" */
+	}
+
+	dot = target;
+	for (;;) {
+		dot = strchr(dot, '.');
+		if (!dot)
+			return 0; /* safe target */
+
+		/* Is it a path component starting with ".."? */
+		if ((dot[1] == '.')
+		 && (dot == target || dot[-1] == '/')
+		    /* Is it exactly ".."? */
+		 && (dot[2] == '/' || dot[2] == '\0')
+		) {
+			goto unsafe;
+		}
+		/* NB: it can even be trailing ".", should only add 1 */
+		dot += 1;
+	}
+}
Index: busybox-1.22.0/archival/tar.c
===================================================================
--- busybox-1.22.0.orig/archival/tar.c	2017-11-30 08:53:02.744694558 -0500
+++ busybox-1.22.0/archival/tar.c	2017-11-30 08:53:02.736694461 -0500
@@ -291,23 +291,6 @@ static void chksum_and_xwrite(int fd, st
 	xwrite(fd, hp, sizeof(*hp));
 }
 
-static void replace_symlink_placeholders(llist_t *list)
-{
-	while (list) {
-		char *target;
-
-		target = list->data + strlen(list->data) + 1;
-		if (symlink(target, list->data)) {
-			/* shared message */
-			bb_error_msg_and_die("can't create %slink '%s' to '%s'",
-				"sym",
-				list->data, target
-			);
-		}
-		list = list->link;
-	}
-}
-
 #if ENABLE_FEATURE_TAR_GNU_EXTENSIONS
 static void writeLongname(int fd, int type, const char *name, int dir)
 {
@@ -1204,8 +1187,6 @@ int tar_main(int argc UNUSED_PARAM, char
 	while (get_header_tar(tar_handle) == EXIT_SUCCESS)
 		bb_got_signal = EXIT_SUCCESS; /* saw at least one header, good */
 
-	replace_symlink_placeholders(tar_handle->symlink_placeholders);
-
 	/* Check that every file that should have been extracted was */
 	while (tar_handle->accept) {
 		if (!find_list_entry(tar_handle->reject, tar_handle->accept->data)
Index: busybox-1.22.0/include/bb_archive.h
===================================================================
--- busybox-1.22.0.orig/include/bb_archive.h	2017-11-30 08:53:02.744694558 -0500
+++ busybox-1.22.0/include/bb_archive.h	2017-11-30 08:53:02.740694509 -0500
@@ -64,9 +64,6 @@ typedef struct archive_handle_t {
 	/* Currently processed file's header */
 	file_header_t *file_header;
 
-	/* List of symlink placeholders */
-	llist_t *symlink_placeholders;
-
 	/* Process the header component, e.g. tar -t */
 	void FAST_FUNC (*action_header)(const file_header_t *);
 
@@ -193,6 +190,7 @@ void seek_by_jump(int fd, off_t amount)
 void seek_by_read(int fd, off_t amount) FAST_FUNC;
 
 const char *strip_unsafe_prefix(const char *str) FAST_FUNC;
+int unsafe_symlink_target(const char *target) FAST_FUNC;
 
 void data_align(archive_handle_t *archive_handle, unsigned boundary) FAST_FUNC;
 const llist_t *find_list_entry(const llist_t *list, const char *filename) FAST_FUNC;
Index: busybox-1.22.0/libbb/copy_file.c
===================================================================
--- busybox-1.22.0.orig/libbb/copy_file.c	2017-11-30 08:53:02.744694558 -0500
+++ busybox-1.22.0/libbb/copy_file.c	2017-11-30 08:53:02.740694509 -0500
@@ -345,7 +345,10 @@ int FAST_FUNC copy_file(const char *sour
 			int r = symlink(lpath, dest);
 			free(lpath);
 			if (r < 0) {
-				bb_perror_msg("can't create symlink '%s'", dest);
+				/* shared message */
+				bb_perror_msg("can't create %slink '%s' to '%s'",
+					"sym", dest, lpath
+				);
 				return -1;
 			}
 			if (flags & FILEUTILS_PRESERVE_STATUS)
Index: busybox-1.22.0/testsuite/tar.tests
===================================================================
--- busybox-1.22.0.orig/testsuite/tar.tests	2017-11-30 08:53:02.744694558 -0500
+++ busybox-1.22.0/testsuite/tar.tests	2017-11-30 08:53:02.740694509 -0500
@@ -265,9 +265,9 @@ ls symlink/bb_test_evilfile
 ' "\
 anything.txt
 symlink
+tar: skipping unsafe symlink to '/tmp' in archive, set EXTRACT_UNSAFE_SYMLINKS=1 to extract
 symlink/bb_test_evilfile
-tar: can't create symlink 'symlink' to '/tmp'
-1
+0
 ls: /tmp/bb_test_evilfile: No such file or directory
 ls: bb_test_evilfile: No such file or directory
 symlink/bb_test_evilfile
